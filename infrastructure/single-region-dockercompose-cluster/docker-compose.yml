version: '3.3'

services:

  us-east1:
    image: ${CRDB_VERSION}
    container_name: us-east1
    ports:
      - "26257:26257"
      - "8081:8080"
    command: ["start", "--listen-addr=us-east1", "--insecure","--locality=region=us-east,zone=us-east1","--join=us-east1,us-east2,us-east3,us-east4"]
    restart: always

  us-east2:
    image: ${CRDB_VERSION}
    container_name: us-east2
    ports:
      - "26258:26257"
      - "8082:8080"
    command: ["start", "--listen-addr=us-east2", "--insecure","--locality=region=us-east,zone=us-east2","--join=us-east1,us-east2,us-east3,us-east4"]
    restart: always

  us-east3:
    image: ${CRDB_VERSION}
    container_name: us-east3
    ports:
      - "26259:26257"
      - "8083:8080"
    command: ["start", "--listen-addr=us-east3", "--insecure","--locality=region=us-east,zone=us-east3","--join=us-east1,us-east2,us-east3,us-east4"]
    restart: always

  us-east4:
    image: ${CRDB_VERSION}
    container_name: us-east4
    ports:
      - "26260:26257"
      - "8084:8080"
    command: ["start", "--listen-addr=us-east4", "--insecure","--locality=region=us-east,zone=us-east4","--join=us-east1,us-east2,us-east3,us-east4"]
    restart: always

  init:
    image: ${CRDB_VERSION}
    container_name: init
    depends_on:
      - us-east1
      - us-east2
      - us-east3
    command: ["init", "--insecure", "--host=us-east1"]

  enterprise:
    image: ${CRDB_VERSION}
    container_name: enterprise
    depends_on:
      - init
    command: ["sql", "--insecure", "--host=us-east1", "-e", "SET CLUSTER SETTING cluster.organization = '${COMPANY}';SET CLUSTER SETTING enterprise.license = '${ENTKEY}';"]

  location:
    image: ${CRDB_VERSION}
    container_name: location
    depends_on:
      - enterprise
    command: ["sql", "--insecure", "--host=us-east1", "-e", "UPSERT INTO system.locations VALUES ('region','us-east',38.9072,-77.0369);"]
